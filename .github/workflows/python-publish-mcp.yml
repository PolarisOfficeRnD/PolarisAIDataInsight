# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish Python Package `mcp-polaris-ai-datainsight`

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

env:
  # Name of package in monorepo to build and publish
  SUBDIRECTORY_NAME: "mcp-polaris-ai-datainsight"
  # Package name in pyproject.toml
  PACKAGE_NAME: "mcp-polaris-ai-datainsight"

jobs:
  release-build:
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ${{ github.workspace }}/${{ env.PACKAGE_NAME }}
    
    steps:
      - name: Fetch repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: python -m pip install poetry

      - uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Build release distributions
        run: poetry build
        
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: ${{ github.workspace }}/${{ env.PACKAGE_NAME }}/dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
        
    defaults:
      run:
        working-directory: ${{ github.workspace }}/${{ env.PACKAGE_NAME }}
        
    permissions:
      contents: read    # for actions/checkout
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write    # for pypa/gh-action-pypi-publish

    environment:
      name: pypi
      url: https://pypi.org/project/${{ env.PACKAGE_NAME }}/

    steps:
      - name: Fetch repository
        uses: actions/checkout@v4

      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: ${{ github.workspace }}/${{ env.PACKAGE_NAME }}/dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: ${{ github.workspace }}/${{ env.PACKAGE_NAME }}/dist/
          verbose: true
